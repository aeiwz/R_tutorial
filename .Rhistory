help(copilot)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ASICS")
library(ASICS)
library(metabom8)
library(devtools)
install.packages("devtools")
library(devtools))
library(devtools)
devtools::install_github('tkimhofer/metabom8')
devtools::install_github('tkimhofer/metabom8', force = TRUE)T)
devtools::install_github('tkimhofer/metabom8', force = TRUE)
devtools::install_github('tkimhofer/metabom8', force = TRUE)
library(ASICS)
library(metabom8)
path = 'C:/Users/theer/OneDrive - Khon Kaen University/KKUPC/Project/Alpha/0001/1893_FP/1893_FP'
\
# import 1D MRS data
read1d_proc(path, exp_type=list(PULPROG='cpmgpr1d'))
data = data.frame(t(X), row.names = ppm)
data = data[order(rownames(data)),]
spectra_obj <- createSpectra(data[:, 1])
spectra_obj <- createSpectra(data$X1)
View(data)
spectra_obj <- createSpectra(data$X1)
data$X1
data_test = data$X1
data_test = data.frame(data$X1, row.names = rownames(data)))
data = data.frame(t(X[1,]), row.names = ppm)
data = data.frame(t(X[,1]), row.names = ppm)
data = data.frame(t(X), row.names = ppm)
#reorder by row name by ascending
data_test = data.frame(data$X1, row.names = rownames(data)))
#reorder by row name by ascending
data = data[order(rownames(data)),]
View(data)
spectra_base_cor <- baselineCorrection(data[,1])
data(, 1)
spectra_base_cor <- baselineCorrection(data)
#reorder by row name by ascending
data = data[order(rownames(data)),]
spectra_base_cor <- baselineCorrection(data)
spectra_obj <- createSpectra(data)
ASICS_results <- ASICS(spectra_obj)
View(ASICS_results)
getQuantification(ASICS_results)
quanti = getQuantification(ASICS_results)
View(quanti)
plot(ASICS_results, idx = 1, xlim = c(0, 10), add.metab = "Creatinine")
plot(ASICS_results, idx = 1, xlim = c(0, 10), add.metab = "TartaricAcid")
library(metabom8)
library(metabom8)
library(nmrdata)
library(metabom8)
library(metabom8)
library(metabom8)
install.packages(c("BH", "brew", "brio", "cli", "curl", "desc", "digest", "dplyr", "fansi", "gert", "glue", "htmltools", "httpuv", "httr2", "later", "matrixStats", "mvtnorm", "pkgbuild", "processx", "progress", "ragg", "Rcpp", "RCurl", "readr", "rlang", "roxygen2", "rprojroot", "shiny", "stringi", "testthat", "utf8", "vctrs", "vroom", "waldo", "xml2"))
library(metabom8)
library(metabom8)
library(metabom8)
install.packages("htmltools")
install.packages("htmltools")
library(metabom8)
install.packages("htmltools")
install.packages(c("BH", "brew", "brio", "cli", "curl", "desc", "digest", "dplyr", "fansi", "gert", "glue", "htmltools", "httpuv", "httr2", "later", "matrixStats", "mvtnorm", "pkgbuild", "processx", "progress", "ragg", "Rcpp", "RCurl", "readr", "rlang", "roxygen2", "rprojroot", "shiny", "stringi", "testthat", "utf8", "vctrs", "vroom", "waldo", "xml2"))
library(metabom8)
install.packages("htmltools")
library(metabom8)
remotes::install_github('tkimhofer/metabom8', force = TRUE)
library(metabom8)
install.packages("htmltools")
metanr_packages <- function(){
metr_pkgs <- c("impute", "pcaMethods", "globaltest", "GlobalAncova", "Rgraphviz", "preprocessCore", "genefilter", "SSPA", "sva", "limma", "KEGGgraph", "siggenes","BiocParallel", "MSnbase", "multtest", "RBGL", "edgeR", "fgsea", "devtools", "crmn")
list_installed <- installed.packages()
new_pkgs <- subset(metr_pkgs, !(metr_pkgs %in% list_installed[, "Package"]))
if(length(new_pkgs)!=0){if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(new_pkgs)
print(c(new_pkgs, " packages added..."))
}
if((length(new_pkgs)<1)){
print("No new packages added...")
}
}
metanr_packages <- function(){
metr_pkgs <- c("impute", "pcaMethods", "globaltest", "GlobalAncova", "Rgraphviz", "preprocessCore", "genefilter", "SSPA", "sva", "limma", "KEGGgraph", "siggenes","BiocParallel", "MSnbase", "multtest", "RBGL", "edgeR", "fgsea", "devtools", "crmn")
list_installed <- installed.packages()
new_pkgs <- subset(metr_pkgs, !(metr_pkgs %in% list_installed[, "Package"]))
if(length(new_pkgs)!=0){if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(new_pkgs)
print(c(new_pkgs, " packages added..."))
}
if((length(new_pkgs)<1)){
print("No new packages added...")
}
}
library(devtools)
# Step 2: Install MetaboAnalystR with documentation
devtools::install_github("xia-lab/MetaboAnalystR", build = TRUE, build_vignettes = TRUE, build_manual =T)
library(MetaboAnalystR)
library(MetaboAnalystR)
# Step 2: Install MetaboAnalystR with documentation
devtools::install_github("xia-lab/MetaboAnalystR", build = TRUE, build_vignettes = TRUE, build_manual =T)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
setwd('C:/Users/theer/OneDrive/Github/r_tutorial')
